/*
 * WSO2 API Manager - Gateway
 * This document specifies a **RESTful API** for WSO2 **API Manager** - Gateway. Please see [full swagger definition](https://raw.githubusercontent.com/wso2/carbon-apimgt/v6.5.176/components/apimgt/org.wso2.carbon.apimgt.rest.api.admin/src/main/resources/admin-api.yaml) of the API which is written using [swagger 2.0](http://swagger.io/) specification. 
 *
 * OpenAPI spec version: v1
 * Contact: architecture@wso2.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.wso2.am.integration.clients.gateway.api.dto;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.wso2.am.integration.clients.gateway.api.dto.EndpointsDTO;
import org.wso2.am.integration.clients.gateway.api.dto.LocalEntryDTO;
import org.wso2.am.integration.clients.gateway.api.dto.SequencesDTO;

/**
 * APIArtifactDTO
 */

public class APIArtifactDTO {
  @SerializedName("count")
  private Integer count = null;

  @SerializedName("endpoints")
  private EndpointsDTO endpoints = null;

  @SerializedName("localEntries")
  private LocalEntryDTO localEntries = null;

  @SerializedName("sequences")
  private SequencesDTO sequences = null;

  public APIArtifactDTO count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * Number of Artifacts Returned 
   * @return count
  **/
  @ApiModelProperty(example = "1", value = "Number of Artifacts Returned ")
  public Integer getCount() {
    return count;
  }

  public void setCount(Integer count) {
    this.count = count;
  }

  public APIArtifactDTO endpoints(EndpointsDTO endpoints) {
    this.endpoints = endpoints;
    return this;
  }

   /**
   * Get endpoints
   * @return endpoints
  **/
  @ApiModelProperty(value = "")
  public EndpointsDTO getEndpoints() {
    return endpoints;
  }

  public void setEndpoints(EndpointsDTO endpoints) {
    this.endpoints = endpoints;
  }

  public APIArtifactDTO localEntries(LocalEntryDTO localEntries) {
    this.localEntries = localEntries;
    return this;
  }

   /**
   * Get localEntries
   * @return localEntries
  **/
  @ApiModelProperty(value = "")
  public LocalEntryDTO getLocalEntries() {
    return localEntries;
  }

  public void setLocalEntries(LocalEntryDTO localEntries) {
    this.localEntries = localEntries;
  }

  public APIArtifactDTO sequences(SequencesDTO sequences) {
    this.sequences = sequences;
    return this;
  }

   /**
   * Get sequences
   * @return sequences
  **/
  @ApiModelProperty(value = "")
  public SequencesDTO getSequences() {
    return sequences;
  }

  public void setSequences(SequencesDTO sequences) {
    this.sequences = sequences;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    APIArtifactDTO apIArtifact = (APIArtifactDTO) o;
    return Objects.equals(this.count, apIArtifact.count) &&
        Objects.equals(this.endpoints, apIArtifact.endpoints) &&
        Objects.equals(this.localEntries, apIArtifact.localEntries) &&
        Objects.equals(this.sequences, apIArtifact.sequences);
  }

  @Override
  public int hashCode() {
    return Objects.hash(count, endpoints, localEntries, sequences);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class APIArtifactDTO {\n");
    
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    endpoints: ").append(toIndentedString(endpoints)).append("\n");
    sb.append("    localEntries: ").append(toIndentedString(localEntries)).append("\n");
    sb.append("    sequences: ").append(toIndentedString(sequences)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

