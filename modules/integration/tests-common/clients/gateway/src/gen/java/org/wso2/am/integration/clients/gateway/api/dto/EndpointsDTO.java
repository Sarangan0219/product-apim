/*
 * WSO2 API Manager - Gateway
 * This document specifies a **RESTful API** for WSO2 **API Manager** - Gateway. Please see [full swagger definition](https://raw.githubusercontent.com/wso2/carbon-apimgt/v6.5.176/components/apimgt/org.wso2.carbon.apimgt.rest.api.admin/src/main/resources/admin-api.yaml) of the API which is written using [swagger 2.0](http://swagger.io/) specification. 
 *
 * OpenAPI spec version: v1
 * Contact: architecture@wso2.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.wso2.am.integration.clients.gateway.api.dto;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * EndpointsDTO
 */

public class EndpointsDTO {
  @SerializedName("deployedEndpoints")
  private List<String> deployedEndpoints = null;

  @SerializedName("UnDeployedEndpoints")
  private List<String> unDeployedEndpoints = null;

  public EndpointsDTO deployedEndpoints(List<String> deployedEndpoints) {
    this.deployedEndpoints = deployedEndpoints;
    return this;
  }

  public EndpointsDTO addDeployedEndpointsItem(String deployedEndpointsItem) {
    if (this.deployedEndpoints == null) {
      this.deployedEndpoints = new ArrayList<>();
    }
    this.deployedEndpoints.add(deployedEndpointsItem);
    return this;
  }

   /**
   * The end points which has been deployed in the gateway 
   * @return deployedEndpoints
  **/
  @ApiModelProperty(value = "The end points which has been deployed in the gateway ")
  public List<String> getDeployedEndpoints() {
    return deployedEndpoints;
  }

  public void setDeployedEndpoints(List<String> deployedEndpoints) {
    this.deployedEndpoints = deployedEndpoints;
  }

  public EndpointsDTO unDeployedEndpoints(List<String> unDeployedEndpoints) {
    this.unDeployedEndpoints = unDeployedEndpoints;
    return this;
  }

  public EndpointsDTO addUnDeployedEndpointsItem(String unDeployedEndpointsItem) {
    if (this.unDeployedEndpoints == null) {
      this.unDeployedEndpoints = new ArrayList<>();
    }
    this.unDeployedEndpoints.add(unDeployedEndpointsItem);
    return this;
  }

   /**
   * The end points which has not been deployed in the gateway 
   * @return unDeployedEndpoints
  **/
  @ApiModelProperty(value = "The end points which has not been deployed in the gateway ")
  public List<String> getUnDeployedEndpoints() {
    return unDeployedEndpoints;
  }

  public void setUnDeployedEndpoints(List<String> unDeployedEndpoints) {
    this.unDeployedEndpoints = unDeployedEndpoints;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EndpointsDTO endpoints = (EndpointsDTO) o;
    return Objects.equals(this.deployedEndpoints, endpoints.deployedEndpoints) &&
        Objects.equals(this.unDeployedEndpoints, endpoints.unDeployedEndpoints);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deployedEndpoints, unDeployedEndpoints);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EndpointsDTO {\n");
    
    sb.append("    deployedEndpoints: ").append(toIndentedString(deployedEndpoints)).append("\n");
    sb.append("    unDeployedEndpoints: ").append(toIndentedString(unDeployedEndpoints)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

